import swaggerJsDoc, { Options } from 'swagger-jsdoc';
import path from 'path';
import { loadRoutes,routeJson } from '@routes/index';
import { loadModels } from '@system/modelLoader';
import { generateSwaggerSchemas } from './generateSwaggerSchemas';
// Dynamically find all routes files matching *.ts pattern
const routeFiles =path.join(__dirname, '../../routes/*.ts');
export async function createSwaggerSpec() {
    await loadRoutes(); // Load routeJson before use
    // console.log('Route files found:', routeJson);
    const models = await loadModels();
    const swaggerSchemas = generateSwaggerSchemas(models);
    const options: Options = {
      definition: {
        openapi: '3.0.0',
        info: {
          title: 'Project API Docs',
          version: '1.0.0',
          description: 'API documentation generated by swagger-jsdoc',
        },
        components: {
          schemas: swaggerSchemas,
          securitySchemes: {
            bearerAuth: {
              type: 'http',
              scheme: 'bearer',
              bearerFormat: 'JWT',
              description: 'JWT Authorization header using the Bearer scheme',
            },
          },
        },
        security: [{ bearerAuth: [] }],
        servers: [
          {
            url: 'http://localhost:3000/api',
            description: 'Local server',
          },
        ],
        paths: routeJson,
      },
      apis: [routeFiles],
    };

    return swaggerJsDoc(options);
  // }).catch((error) => {
    // console.error('Error loading routes:', error);
    // throw error;
  // });
}
export default createSwaggerSpec;